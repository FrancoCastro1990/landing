---
import '@shared/styles/global.css';
import AnimatedBackground from '@shared/ui/AnimatedBackground.tsx';
import ThemeToggle from '@shared/ui/ThemeToggle.tsx';
import { DynamicBackground, ScrollIndicator, Hero } from '@features/hero';
import { Header } from '@features/navigation';
import { About } from '@features/about';
import { Experience } from '@features/experience';
import { ProjectsGrid } from '@features/projects';
import { Contact } from '@features/contact';
import { Footer } from '@features/layout';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Franco Castro Villanueva - Full Stack Developer with 6+ years of experience specializing in React, TypeScript, and Clean Architecture. Currently at Isapre Esencial." />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>Franco Castro Villanueva — Full Stack Developer (React & TypeScript)</title>
    
    <!-- Open Graph -->
    <meta property="og:title" content="Franco Castro Villanueva — Full Stack Developer" />
    <meta property="og:description" content="Full Stack Developer with 6+ years of experience. Specialized in React, TypeScript, Clean Architecture, and team mentorship." />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://fcastro.dev" />
    <meta property="og:site_name" content="Franco Castro" />
    
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Franco Castro Villanueva — Full Stack Developer" />
    <meta name="twitter:description" content="Full Stack Developer with 6+ years of experience in React, TypeScript, and Clean Architecture" />
    
    <!-- Preload critical fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- Theme color -->
    <meta name="theme-color" content="#00ff66" />
    
    <!-- Additional SEO -->
    <meta name="author" content="Franco Castro Villanueva" />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href="https://fcastro.dev" />
    
    <!-- Initialize theme early to prevent flash -->
    <script is:inline>
      (function() {
        const savedTheme = localStorage.getItem('theme');
        const systemPreference = window.matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark';
        const initialTheme = savedTheme || systemPreference;
        document.documentElement.className = initialTheme === 'dark' ? 'dark' : '';
      })();
    </script>
  </head>
  <body class="bg-lightTheme-bg text-lightTheme-text dark:bg-darkTheme-bg dark:text-darkTheme-text font-sans transition-colors duration-300">
    <!-- Animated Background -->
    <AnimatedBackground client:load />
    
    <!-- Dynamic Background -->
    <DynamicBackground client:load />
    
    <!-- Scroll Indicator -->
    <ScrollIndicator client:visible />
    
    <!-- Theme Toggle -->
    <ThemeToggle client:load />
    
    <!-- Header -->
    <Header client:load />
    
    <!-- Main Content -->
    <main>
      <!-- Hero Section -->
      <Hero client:visible />
      
      <!-- About Section -->
      <About client:visible />
      
      <!-- Experience Section -->
      <Experience client:visible />
      
      <!-- Projects Section -->
      <ProjectsGrid client:visible />
      
      <!-- Contact Section -->
      <Contact client:visible />
    </main>
    
    <!-- Footer -->
    <Footer />

    <script>
      // Add animation toggle functionality for demo purposes
      let animationPaused = false;
      
      // Add keyboard shortcut to toggle animations (Ctrl+A)
      document.addEventListener('keydown', (e) => {
        if (e.ctrlKey && e.key === 'a') {
          e.preventDefault();
          animationPaused = !animationPaused;
          
          // Dispatch custom event to communicate with AnimatedBackground component
          window.dispatchEvent(new CustomEvent('toggle-animation', { 
            detail: { paused: animationPaused } 
          }));
          
          // Show notification
          const notification = document.createElement('div');
          notification.textContent = `Background animation ${animationPaused ? 'paused' : 'resumed'}`;
          notification.style.cssText = `
            position: fixed; 
            top: 20px; 
            right: 20px; 
            background: rgba(0, 255, 102, 0.1); 
            color: #00ff66; 
            padding: 10px 20px; 
            border: 1px solid rgba(0, 255, 102, 0.3); 
            border-radius: 4px; 
            font-family: 'Fira Code', monospace; 
            font-size: 12px; 
            z-index: 9999;
            transition: opacity 0.3s ease;
          `;
          
          document.body.appendChild(notification);
          
          setTimeout(() => {
            notification.style.opacity = '0';
            setTimeout(() => document.body.removeChild(notification), 300);
          }, 2000);
        }
      });

      // Smooth scrolling polyfill for older browsers
      // if (!('scrollBehavior' in document.documentElement.style)) {
      //   import('smoothscroll-polyfill').then(smoothscroll => {
      //     smoothscroll.polyfill();
      //   });
      // }
    </script>
  </body>
</html>